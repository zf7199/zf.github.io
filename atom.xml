<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-26T03:58:25.266Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zzf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搜索插入位置</title>
    <link href="http://yoursite.com/2018/08/26/%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/08/26/搜索插入位置/</id>
    <published>2018-08-26T03:50:01.000Z</published>
    <updated>2018-08-26T03:58:25.266Z</updated>
    
    <content type="html"><![CDATA[<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><a id="more"></a><p>你可以假设数组中无重复元素。<br><strong>示例1：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[1, 3, 5, 6], 5</span><br><span class="line">输出：2</span><br></pre></td></tr></table></figure></p><p><strong>示例2：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[1, 3, 5, 6], 2</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure></p><p><strong>示例3：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[1, 3, 5, 6], 7</span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure></p><p><strong>示例4：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[1, 3, 5, 6], 0</span><br><span class="line">输出：0</span><br></pre></td></tr></table></figure></p><p><code>C语言</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">int searchInsert(int* nums, int numsSize, int target) &#123;</span><br><span class="line">    int i = 0;</span><br><span class="line">    <span class="keyword">if</span> (target &gt; nums[numsSize - 1])</span><br><span class="line">        <span class="built_in">return</span> numsSize;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; nums[0])</span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span>(i ; i &lt; numsSize ; ++i)</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &gt;= target)</span><br><span class="line">                <span class="built_in">return</span> i;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>有效的括号</title>
    <link href="http://yoursite.com/2018/08/24/%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/"/>
    <id>http://yoursite.com/2018/08/24/有效的括号/</id>
    <published>2018-08-24T10:55:01.000Z</published>
    <updated>2018-08-24T11:05:30.204Z</updated>
    
    <content type="html"><![CDATA[<p>给定一个只包括 <code>&#39;(&#39;</code>，<code>&#39;)&#39;</code>，<code>&#39;{&#39;</code>，<code>&#39;}&#39;</code>，<code>&#39;[&#39;</code>，<code>&#39;]&#39;</code> 的字符串，判断字符串是否有效。<br><a id="more"></a></p><p>有效字符串需满足：<br>1.左括号必须用相同类型的右括号闭合。<br>2.左括号必须以正确的顺序闭合。<br>注意空字符串可被认为是有效字符串。</p><p><strong>示例1：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"()"</span></span><br><span class="line">输出:<span class="string">"ture"</span></span><br></pre></td></tr></table></figure></p><p><strong>示例2：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"()[]&#123;&#125;"</span></span><br><span class="line">输出：<span class="string">"true"</span></span><br></pre></td></tr></table></figure></p><p><strong>示例3：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"(]"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p><strong>示例4：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"([)]"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p><strong>示例5：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"&#123;[]&#125;"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><strong>Python3</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">   def isValid(self, s):</span><br><span class="line">       <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">       :type s: str</span></span><br><span class="line"><span class="string">       :rtype: bool</span></span><br><span class="line"><span class="string">       "</span><span class="string">""</span></span><br><span class="line">       dicts = &#123;</span><br><span class="line">           <span class="string">')'</span>:<span class="string">'('</span>,</span><br><span class="line">           <span class="string">']'</span>:<span class="string">'['</span>,</span><br><span class="line">           <span class="string">'&#125;'</span>:<span class="string">'&#123;'</span>,</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       dict_r, dict_l = dicts.keys(), dicts.values()</span><br><span class="line">       </span><br><span class="line">       stack = []</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">for</span> item <span class="keyword">in</span> s:</span><br><span class="line">           <span class="keyword">if</span> item <span class="keyword">in</span> dict_l:</span><br><span class="line">               stack.append(item)</span><br><span class="line">           <span class="keyword">elif</span> item <span class="keyword">in</span> dict_r:</span><br><span class="line">               <span class="keyword">if</span> stack and stack[-1] == dicts[item]:</span><br><span class="line">                   stack.pop()</span><br><span class="line">               <span class="keyword">else</span>:</span><br><span class="line">                   <span class="built_in">return</span> False</span><br><span class="line">               </span><br><span class="line">       <span class="keyword">if</span> stack:</span><br><span class="line">           <span class="built_in">return</span> False</span><br><span class="line">       <span class="built_in">return</span> True</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给定一个只包括 &lt;code&gt;&amp;#39;(&amp;#39;&lt;/code&gt;，&lt;code&gt;&amp;#39;)&amp;#39;&lt;/code&gt;，&lt;code&gt;&amp;#39;{&amp;#39;&lt;/code&gt;，&lt;code&gt;&amp;#39;}&amp;#39;&lt;/code&gt;，&lt;code&gt;&amp;#39;[&amp;#39;&lt;/code&gt;，&lt;code&gt;&amp;#39;]&amp;#39;&lt;/code&gt; 的字符串，判断字符串是否有效。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>回文数</title>
    <link href="http://yoursite.com/2018/08/24/%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    <id>http://yoursite.com/2018/08/24/回文数/</id>
    <published>2018-08-24T10:04:17.000Z</published>
    <updated>2018-08-24T11:05:33.391Z</updated>
    
    <content type="html"><![CDATA[<p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><a id="more"></a><p><strong>示例1：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"III"</span></span><br><span class="line">输出：3</span><br></pre></td></tr></table></figure></p><p><strong>示例2：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"IV"</span></span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure></p><p><strong>示例3：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"IX"</span></span><br><span class="line">输出：9</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def isPalindrome(self, x):</span><br><span class="line">        <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        "</span><span class="string">""</span></span><br><span class="line">        n = str(x)</span><br><span class="line">        v = <span class="string">''</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(n)):</span><br><span class="line">            v = v + n[-(i+1)]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> n == v:</span><br><span class="line">            <span class="built_in">return</span> True</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">return</span> False</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>罗马数字转整数</title>
    <link href="http://yoursite.com/2018/08/23/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/"/>
    <id>http://yoursite.com/2018/08/23/罗马数字转整数/</id>
    <published>2018-08-23T13:31:04.000Z</published>
    <updated>2018-08-24T11:05:28.563Z</updated>
    
    <content type="html"><![CDATA[<p>罗马数字包含以下七种字符：<code>I</code>,<code>V</code>,<code>X</code>,<code>L</code>,<code>C</code>,<code>D</code>和<code>M</code>。<br><a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符数值</span><br><span class="line">I1</span><br><span class="line">V5</span><br><span class="line">X10</span><br><span class="line">L50</span><br><span class="line">C100</span><br><span class="line">D500</span><br><span class="line">M1000</span><br></pre></td></tr></table></figure><p>例如，罗马数字 2 写做<code>II</code>，即为两个并列的1。12写作<code>XII</code>，即为<code>X</code>+<code>II</code>。27写作<code>XXVII</code>，即为<code>XX</code>+<code>V</code>+<code>II</code>。<br>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如4不写做<code>IIII</code>，而是<code>IV</code>。数字1在数字5的左边，所表示的数等于大数5减1得到的数值<br>4.同样地，数字9表示为<code>IX</code>。这个特殊的规则只适用于以下六种情况：</p><ul><li><code>I</code>可以放在<code>V</code>(5)和<code>X</code>(10)的左边，来表示4和9。</li><li><code>X</code>可以放在<code>L</code>(50)和<code>C</code>(100)的左边，来表示40和90。</li><li><code>C</code>可以放在<code>D</code>(500)和<code>M</code>(1000)的左边，来表示400和900。<br>给定一个罗马数字，将其转换成整数。输入确保在1到3999的范围内。</li></ul><p><strong>示例1：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"III"</span></span><br><span class="line">输出：3</span><br></pre></td></tr></table></figure></p><p><strong>示例2：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"IV"</span></span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure></p><p><strong>示例3：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：<span class="string">"IX"</span></span><br><span class="line">输出：9</span><br></pre></td></tr></table></figure></p><p><strong>注意</strong><br>假设我们的环境只能存储32位有符号整数，其数值范围是[-2^31, 2^31-1]。根据这个假设，如果反转后的整数溢出，则返回0.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def romanToInt(self, s):</span><br><span class="line">        <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        "</span><span class="string">""</span></span><br><span class="line">        r_dicts = &#123;</span><br><span class="line">            <span class="string">'I'</span>:1,</span><br><span class="line">            <span class="string">'V'</span>:5,</span><br><span class="line">            <span class="string">'X'</span>:10,</span><br><span class="line">            <span class="string">'L'</span>:50,</span><br><span class="line">            <span class="string">'C'</span>:100,</span><br><span class="line">            <span class="string">'D'</span>:500,</span><br><span class="line">            <span class="string">'M'</span>:1000,</span><br><span class="line">            </span><br><span class="line">        &#125;   </span><br><span class="line">        </span><br><span class="line">        result = 0</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s) - 1):</span><br><span class="line">            <span class="keyword">if</span> r_dicts[s[i]] &lt; r_dicts[s[i+1]]:</span><br><span class="line">                result -= r_dicts[s[i]]</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result += r_dicts[s[i]]</span><br><span class="line">                </span><br><span class="line">        <span class="built_in">return</span> result + r_dicts[s[-1]]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;罗马数字包含以下七种字符：&lt;code&gt;I&lt;/code&gt;,&lt;code&gt;V&lt;/code&gt;,&lt;code&gt;X&lt;/code&gt;,&lt;code&gt;L&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;,&lt;code&gt;D&lt;/code&gt;和&lt;code&gt;M&lt;/code&gt;。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>反转整数</title>
    <link href="http://yoursite.com/2018/08/23/%E5%8F%8D%E8%BD%AC%E6%95%B4%E6%95%B0/"/>
    <id>http://yoursite.com/2018/08/23/反转整数/</id>
    <published>2018-08-23T13:11:38.000Z</published>
    <updated>2018-08-24T11:05:31.188Z</updated>
    
    <content type="html"><![CDATA[<p>给定一个32位有符号整数，将整数中的数字进行反转。</p><a id="more"></a><p><strong>示例1：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：123</span><br><span class="line">输出：321</span><br></pre></td></tr></table></figure></p><p><strong>示例2：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：-123</span><br><span class="line">输出：-321</span><br></pre></td></tr></table></figure></p><p><strong>示例3：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：120</span><br><span class="line">输出：21</span><br></pre></td></tr></table></figure></p><p><strong>注意</strong><br>假设我们的环境只能存储32位有符号整数，其数值范围是[-2^31, 2^31-1]。根据这个假设，如果反转后的整数溢出，则返回0.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def reverse(self, x):</span><br><span class="line">        <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        "</span><span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> -10 &lt; x &lt; 10:</span><br><span class="line">            <span class="built_in">return</span> x</span><br><span class="line">        </span><br><span class="line">        n = str(abs(x))</span><br><span class="line">        v = <span class="string">''</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(n)):</span><br><span class="line">            v = v + n[-(i+1)]</span><br><span class="line">            </span><br><span class="line">        result = int(v)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> x &lt; 0:</span><br><span class="line">            result = -result</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> -2 ** 31 &lt;= result &lt;= 2 **31 - 1:</span><br><span class="line">            <span class="built_in">return</span> result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">return</span> 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给定一个32位有符号整数，将整数中的数字进行反转。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
